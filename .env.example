# =============================================================================
# EXEMPLO DE CONFIGURAÇÃO PARA DOCKER COMPOSE
# =============================================================================
# Copie este arquivo para .env e ajuste os valores conforme necessário
# cp .env.example .env

# =============================================================================
# CONFIGURAÇÕES DE REDE E PORTAS
# =============================================================================
# Portas expostas para acesso local
NGINX_PORT=80
NGINX_SSL_PORT=443
FRONTEND_PORT=3000
BACKEND_PORT=3001
POSTGRES_PORT=5432
REDIS_PORT=6379
MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001

# =============================================================================
# CONFIGURAÇÕES DO BANCO DE DADOS (PostgreSQL)
# =============================================================================
POSTGRES_DB=ai_detector
POSTGRES_USER=postgres
POSTGRES_PASSWORD=secure_password_change_me
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# =============================================================================
# CONFIGURAÇÕES DO REDIS
# =============================================================================
REDIS_PASSWORD=
# Deixe vazio para sem senha ou defina uma senha forte
# REDIS_PASSWORD=your_redis_password_here

# =============================================================================
# CONFIGURAÇÕES DO MINIO (S3 COMPATIBLE STORAGE)
# =============================================================================
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin123_change_me
MINIO_BUCKET=truecheckia
MINIO_DEFAULT_BUCKETS=truecheckia

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA (JWT)
# =============================================================================
# IMPORTANTE: Gere chaves seguras para produção!
# Você pode usar: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production

# =============================================================================
# CONFIGURAÇÕES DA APLICAÇÃO
# =============================================================================
APP_NAME=TrueCheck AI
APP_VERSION=1.0.0
NODE_ENV=development

# URLs da aplicação
FRONTEND_URL=http://localhost:3000,http://localhost
API_URL=http://localhost/api

# =============================================================================
# CHAVES DE API EXTERNAS
# =============================================================================
# Chave da Anthropic Claude
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Outras chaves de API (opcionais)
GPTZERO_API_KEY=your_gptzero_api_key_here
HIVE_API_KEY=your_hive_api_key_here
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# CONFIGURAÇÕES DE EMAIL (OPCIONAL)
# =============================================================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# =============================================================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# =============================================================================
# Pular serviços durante desenvolvimento (true/false)
SKIP_REDIS=false
SKIP_MINIO=false
SKIP_AI_DETECTION=false

# Log level
LOG_LEVEL=debug

# =============================================================================
# INSTRUÇÕES DE USO:
# =============================================================================
# 1. Copie este arquivo: cp .env.example .env
# 2. Edite o .env com seus valores reais
# 3. Execute: docker compose up -d
# 4. Acesse: http://localhost
#
# Para parar: docker compose down
# Para rebuild: docker compose up --build
# Para logs: docker compose logs -f [service_name]
# =============================================================================