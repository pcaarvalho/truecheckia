import { z } from 'zod';
declare const envSchema: z.ZodObject<{
    NODE_ENV: z.ZodEnum<["development", "test", "production"]>;
    PORT: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    DATABASE_URL: z.ZodString;
    REDIS_URL: z.ZodString;
    JWT_SECRET: z.ZodString;
    JWT_REFRESH_SECRET: z.ZodString;
    JWT_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    JWT_REFRESH_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    MINIO_ENDPOINT: z.ZodOptional<z.ZodString>;
    MINIO_PORT: z.ZodOptional<z.ZodEffects<z.ZodString, number, string>>;
    MINIO_ACCESS_KEY: z.ZodOptional<z.ZodString>;
    MINIO_SECRET_KEY: z.ZodOptional<z.ZodString>;
    MINIO_BUCKET: z.ZodOptional<z.ZodString>;
    MINIO_USE_SSL: z.ZodOptional<z.ZodEffects<z.ZodString, boolean, string>>;
    CORS_ORIGIN: z.ZodDefault<z.ZodString>;
    RATE_LIMIT_WINDOW_MS: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    RATE_LIMIT_MAX: z.ZodDefault<z.ZodEffects<z.ZodString, number, string>>;
    ANTHROPIC_API_KEY: z.ZodString;
}, "strip", z.ZodTypeAny, {
    NODE_ENV: "production" | "development" | "test";
    REDIS_URL: string;
    JWT_SECRET: string;
    JWT_REFRESH_SECRET: string;
    ANTHROPIC_API_KEY: string;
    PORT: number;
    DATABASE_URL: string;
    JWT_EXPIRES_IN: string;
    JWT_REFRESH_EXPIRES_IN: string;
    CORS_ORIGIN: string;
    RATE_LIMIT_WINDOW_MS: number;
    RATE_LIMIT_MAX: number;
    MINIO_ENDPOINT?: string | undefined;
    MINIO_ACCESS_KEY?: string | undefined;
    MINIO_SECRET_KEY?: string | undefined;
    MINIO_PORT?: number | undefined;
    MINIO_USE_SSL?: boolean | undefined;
    MINIO_BUCKET?: string | undefined;
}, {
    NODE_ENV: "production" | "development" | "test";
    REDIS_URL: string;
    JWT_SECRET: string;
    JWT_REFRESH_SECRET: string;
    ANTHROPIC_API_KEY: string;
    DATABASE_URL: string;
    MINIO_ENDPOINT?: string | undefined;
    MINIO_ACCESS_KEY?: string | undefined;
    MINIO_SECRET_KEY?: string | undefined;
    MINIO_PORT?: string | undefined;
    MINIO_USE_SSL?: string | undefined;
    PORT?: string | undefined;
    JWT_EXPIRES_IN?: string | undefined;
    JWT_REFRESH_EXPIRES_IN?: string | undefined;
    MINIO_BUCKET?: string | undefined;
    CORS_ORIGIN?: string | undefined;
    RATE_LIMIT_WINDOW_MS?: string | undefined;
    RATE_LIMIT_MAX?: string | undefined;
}>;
export declare const env: {
    NODE_ENV: "production" | "development" | "test";
    REDIS_URL: string;
    JWT_SECRET: string;
    JWT_REFRESH_SECRET: string;
    ANTHROPIC_API_KEY: string;
    PORT: number;
    DATABASE_URL: string;
    JWT_EXPIRES_IN: string;
    JWT_REFRESH_EXPIRES_IN: string;
    CORS_ORIGIN: string;
    RATE_LIMIT_WINDOW_MS: number;
    RATE_LIMIT_MAX: number;
    MINIO_ENDPOINT?: string | undefined;
    MINIO_ACCESS_KEY?: string | undefined;
    MINIO_SECRET_KEY?: string | undefined;
    MINIO_PORT?: number | undefined;
    MINIO_USE_SSL?: boolean | undefined;
    MINIO_BUCKET?: string | undefined;
};
export type Env = z.infer<typeof envSchema>;
export {};
//# sourceMappingURL=env.d.ts.map